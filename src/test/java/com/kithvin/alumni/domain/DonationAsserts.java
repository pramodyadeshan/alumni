package com.kithvin.alumni.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DonationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonationAllPropertiesEquals(Donation expected, Donation actual) {
        assertDonationAutoGeneratedPropertiesEquals(expected, actual);
        assertDonationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonationAllUpdatablePropertiesEquals(Donation expected, Donation actual) {
        assertDonationUpdatableFieldsEquals(expected, actual);
        assertDonationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonationAutoGeneratedPropertiesEquals(Donation expected, Donation actual) {
        assertThat(expected)
            .as("Verify Donation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonationUpdatableFieldsEquals(Donation expected, Donation actual) {
        assertThat(expected)
            .as("Verify Donation relevant properties")
            .satisfies(e -> assertThat(e.getDonationName()).as("check donationName").isEqualTo(actual.getDonationName()))
            .satisfies(e -> assertThat(e.getContactDetails()).as("check contactDetails").isEqualTo(actual.getContactDetails()))
            .satisfies(e -> assertThat(e.getBillingAddress()).as("check billingAddress").isEqualTo(actual.getBillingAddress()))
            .satisfies(e -> assertThat(e.getAmount()).as("check amount").isEqualTo(actual.getAmount()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDonationType()).as("check donationType").isEqualTo(actual.getDonationType()))
            .satisfies(e -> assertThat(e.getDateAndTime()).as("check dateAndTime").isEqualTo(actual.getDateAndTime()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDonationUpdatableRelationshipsEquals(Donation expected, Donation actual) {}
}
